
lie_algebra = RootSystem(["E", 6])
ambient_space = lie_algebra.ambient_space()
W = ambient_space.weyl_group()

weight_space = lie_algebra.weight_space();
root_lattice = lie_algebra.root_lattice()
coroot_lattice = lie_algebra.coroot_lattice()

simple_roots = root_lattice.basis()
simple_roots_in_weight_space = weight_space.simple_roots()
simple_coroots = root_lattice.simple_coroots()  ### It is the coroots in root lattice
fundamental_weights = weight_space.fundamental_weights()

alpha = simple_coroots
ortho = [ alpha[1], alpha[4], alpha[6], 2*alpha[2]+alpha[1]+2*alpha[3]+3*alpha[4]+2*alpha[5]+alpha[6] ]

# Compute the pairings
print("Pairings of fundamental weights with simple (co)roots:")
for j, sr in enumerate(ortho, start=0):
    m = fundamental_weights[1].scalar(sr)
    print(f"{m}")
    
test_weight = fundamental_weights[1] + fundamental_weights[2]
test_weight_amb = test_weight.to_ambient()
sum = 0
i=0
#for w in W[:100]:
for w in W:
    wt_amb = w.action(test_weight_amb)
    coefficient = []
    prod = 1
    for j, sr in enumerate(ortho, start=0):
        result = ortho[j].to_ambient().scalar(wt_amb)
        prod = prod * result * result 
        coefficient.append(result)
    i=i+1
    print(f"the {i}'s computation:{coefficient} and {prod}, the temp sum is {sum}")
    sum = sum + prod
print(f"the final coefficient is {sum}")   